@using StudentInfo.Interfaces.IRepositories
@using StudentInfo.Model
@using GroupModel = StudentInfo.Model.Group

@inject NotificationService notificationService
@inject IBaseRepository<Faculty> facultyRepository
@inject IBaseRepository<GroupModel> groupRepository
@inject IJSRuntime JSRuntime
@inject DialogService dialogService


<PageTitle>Add Group</PageTitle>
<RadzenColumn SizeMD=12>
    <RadzenAlert Shade="Shade.Lighter" Variant="Variant.Flat" Size="AlertSize.Small" AlertStyle="AlertStyle.Danger" Visible="@errorVisible">Cannot save Group</RadzenAlert>
    <RadzenTemplateForm TItem="GroupModel" Data="@group" Visible="@(group != null)" Submit="@FormSubmit">
       
        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Name" Component="Name" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenTextBox style="display: block; width: 100%" @bind-Value="@group.Name" Name="Name" />
                <RadzenRequiredValidator Component="Name" Text="Name is required" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenRow style="margin-bottom: 1rem">
            <RadzenColumn SizeMD="3">
                <RadzenLabel Text="Faculty" Component="Faculty" style="width: 100%" />
            </RadzenColumn>
            <RadzenColumn SizeMD="9">
                <RadzenDropDown Data="@facultiesForFacultyId" TextProperty="Name" ValueProperty="FacultyId" AllowClear=true
                                Placeholder="Choose Faculty" style="display: block; width: 100%" @bind-Value="@group.FacultyId" Name="FacultyId" />
            </RadzenColumn>
        </RadzenRow>

        <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.End" Gap="0.5rem">
            <RadzenButton ButtonStyle="ButtonStyle.Primary" ButtonType="ButtonType.Submit" Icon="save" Text="Save" Variant="Variant.Flat" />
            <RadzenButton ButtonStyle="ButtonStyle.Light" Text="Cancel" Variant="Variant.Flat" Click="@CancelButtonClick" />
        </RadzenStack>
    </RadzenTemplateForm>
</RadzenColumn>
@code {
    protected override async Task OnInitializedAsync()
    {
        group = new GroupModel();

        facultiesForFacultyId = facultyRepository.GetAllElements();
    }
    protected bool errorVisible;
    protected GroupModel group;

    protected IEnumerable<Faculty> facultiesForFacultyId;

    protected async Task FormSubmit()
    {
        try
        {
            groupRepository.CreateElement(group);
            dialogService.Close(group);
        }
        catch (Exception ex)
        {
            errorVisible = true;
        }
    }

    protected async Task CancelButtonClick(MouseEventArgs args)
    {
        dialogService.Close(null);
    }
}
